
-- 1.
-- There are three issues that include the words "index" and "Oracle". Find the call_date for each of them
SELECT call_date, call_ref
FROM Issue
WHERE detail LIKE '%index%'
  AND detail LIKE '%Oracle%'

-- 2.
-- Samantha Hall made three calls on 2017-08-14. Show the date and time for each
SELECT call_date, first_name, last_name
FROM Issue, Caller
WHERE Issue.Caller_id = Caller.caller_id
  AND first_name = 'Samantha'
  AND last_name = 'hall'
  AND DATE_FORMAT(Call_date, '%Y-%m-%d') = '2017-08-14'

-- 3.
-- There are 500 calls in the system (roughly). Write a query that shows the number that have each status.
SELECT status, COUNT(*) AS Volume
FROM Issue
GROUP BY Status

-- 4.
-- Calls are not normally assigned to a manager but it does happen. How many calls have been assigned to staff who are at Manager Level?
SELECT COUNT(*) AS mlcc
FROM Issue, Staff
WHERE Issue.Assigned_to = Staff.Staff_code
  AND 'Y' = (SELECT Manager 
             FROM Level
             WHERE Staff.Level_code = Level.Level_code)
			 
-- 5.
-- Show the manager for each shift. Your output should include the shift date and type; also the first and last name of the manager.
SELECT DATE_FORMAT(Shift_date, '%Y-%m-%d') AS Shift_date, Shift_type, first_name, last_name
FROM Shift, Staff
WHERE Shift.Manager = Staff.Staff_code
ORDER BY 1

-- 6.
-- List the Company name and the number of calls for those companies with more than 18 calls.
SELECT Company_name, COUNT(*) AS CC
FROM Customer, Caller, Issue
WHERE Issue.Caller_id = Caller.Caller_id
  AND Caller.Company_ref = Customer.Company_ref
GROUP BY Company_name
HAVING CC > 18

-- 7.
-- Find the callers who have never made a call. Show first name and last name
SELECT first_name, last_name
FROM Caller
WHERE Caller.Caller_id NOT IN (SELECT DISTINCT Issue.Caller_id FROM Issue)

-- 8.
-- For each customer show: Company name, contact name, number of calls where the number of calls is fewer than 5
SELECT Company_name, first_name, last_name, nc
FROM Customer LEFT JOIN Caller ON Customer.Contact_id= Caller.Caller_id
              JOIN (SELECT Company_ref, COUNT(*) AS nc
                    FROM Caller, Issue
                    WHERE Issue.Caller_id = Caller.Caller_id
                    GROUP BY Company_ref
                    HAVING nc < 5
                    )a 
                    ON Customer.Company_ref = a.Company_ref
ORDER BY Company_name

-- 9.
-- For each shift show the number of staff assigned. Beware that some roles may be NULL and that the same person might have been assigned to multiple roles (The roles are 'Manager', 'Operator', 'Engineer1', 'Engineer2').
SELECT Shift_date, Shift_type ,COUNT(DISTINCT role) AS CW
FROM
(
  SELECT Shift_date, Shift_type, Manager AS role FROM Shift
  UNION SELECT Shift_date, Shift_type, Operator AS role FROM Shift
  UNION SELECT Shift_date, Shift_type, Engineer1 AS role FROM Shift
  UNION SELECT Shift_date, Shift_type, Engineer2 AS role FROM Shift
) AS a
GROUP BY Shift_date, Shift_type
ORDER BY Shift_date

-- 10.
-- Caller 'Harry' claims that the operator who took his most recent call was abusive and insulting. Find out who took the call (full name) and when.
SELECT Staff.first_name, Staff.last_name, call_date, Caller.First_name
FROM Staff, Issue, Caller
WHERE Staff.Staff_code = Issue.Taken_by
  AND Caller.Caller_id = Issue.Caller_id
  AND Caller.First_name LIKE 'Harry'
ORDER BY call_date DESC
LIMIT 1

-- 11.
-- Show the manager and number of calls received for each hour of the day on 2017-08-12
-- temp index table for manager and their work date&time
WITH temp1 AS
(
SELECT Manager
     , (Shift_date + INTERVAL Start_time HOUR) AS hStart
     , (Shift_date + INTERVAL End_time HOUR) AS hEnd
FROM Shift, Shift_type
WHERE Shift.Shift_type = Shift_type.Shift_type
 -- AND DATE_FORMAT(Shift_date, '%Y-%m-%d') = '2017-08-12'
)

SELECT 
     (SELECT Manager 
      FROM temp1
      WHERE Issue.Call_date >= hStart AND Issue.Call_date< hEnd) AS Manager 
     , DATE_FORMAT(Call_date, '%Y-%m-%d %H') AS hr
     , COUNT(*) AS cc
FROM Issue
WHERE DATE_FORMAT(Call_date, '%Y-%m-%d') = '2017-08-12'
GROUP BY Manager, hr
ORDER BY hr

-- 12.
-- 80/20 rule. It is said that 80% of the calls are generated by 20% of the callers. Is this true? What percentage of calls are generated by the most active 20% of callers.

-- My-Sql Solution:
-- 1) use a temp table contains Caller_id and total calls from them (group by)
-- 2) add an accumulative counter column to the table to get 'the most active 20% of callers'
-- @counter solutions credit: https://stackoverflow.com/questions/5522433/convert-sql-server-query-to-mysql/5522462#5522462

WITH temp2 AS 
(
SELECT Caller_id, COUNT(*) AS num
FROM Issue
GROUP BY Caller_id
-- ORDER BY num DESC
)

SELECT 100*SUM(x.num)/(SELECT COUNT(*) FROM Issue) AS 't20pc'
FROM
(
    SELECT temp2.*, @counter := @counter +1 AS counter
    FROM (SELECT @counter:=0) initvar, temp2
    ORDER BY temp2.num DESC
) x
WHERE counter <= (20/100 * @counter)

-- 13.
-- Annoying customers. Customers who call in the last five minutes of a shift are annoying. Find the most active customer who has never been annoying.



-- 14.
-- Maximal usage. If every caller registered with a customer makes a call in one day then that customer has "maximal usage" of the service. List the maximal customers for 2017-08-13.
-- this gets the total issue count group by the company on '2017-08-13'
-- note that one user can make 1+ call on this day, so the issue_count not necessary = the caller_count, e.g. Company_ref = 140, caller count is 4, issue count is 5 as caller 44 made 2 calls
-- so, below SQL gives a different result compared to the sample answer
WITH temp1 AS 
(
  SELECT Company_ref AS cref, COUNT(*) AS Issue_count
  FROM Caller, Issue
  WHERE Caller.Caller_id = Issue.Caller_id 
    AND DATE_FORMAT(Call_date, '%Y-%m-%d') = '2017-08-13'
  GROUP BY Company_ref
)

SELECT Company_name
     , (SELECT COUNT(*) FROM Caller WHERE Customer.Company_ref = Caller.Company_ref ) AS caller_count
     , temp1.Issue_count
FROM Customer LEFT JOIN temp1 ON Customer.Company_ref = temp1.cref
-- 3) kick out of the company that NOT ALL of the caller made the call,
--    that we get the company whose callers all have made at least one call
WHERE Company_ref NOT IN 
  (
-- 2) which company caller did not make the call on the day
  SELECT Company_ref 
  FROM Caller
  WHERE Caller_id NOT IN 
     (
-- 1) who made calls on the day
     SELECT DISTINCT Caller_id
     FROM Issue
     WHERE DATE_FORMAT(Call_date, '%Y-%m-%d') = '2017-08-13'
     )
  )
ORDER BY Company_name

-- 15.
-- Consecutive calls occur when an operator deals with two callers within 10 minutes. Find the longest sequence of consecutive calls â€“ give the name of the operator and the first and last call date in the sequence.

